[{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/app.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/app.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/chat-backend/chat.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/chat-backend/controllers/chat.controller.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/chat-backend/repositories/chat.repository.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/chat-backend/services/chat.service.new.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/chat-backend/services/chat.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/common/common.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/common/controllers/health.controller.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/common/dtos/mobile-optimized.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/common/dtos/mobile.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/common/services/database-health.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/common/services/device-fingerprinting.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/common/services/gdpr-compliance.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/common/services/ml-anomaly-detection.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/common/services/mobile-optimization.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/common/services/rate-limiter.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/common/utils/file-validation.util.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/config/database.examples.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/config/database.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/docs/registerDocs.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'fs'` with `\"fs\"`","line":1,"column":21,"nodeType":null,"messageId":"replace","endLine":1,"endColumn":25,"fix":{"range":[20,24],"text":"\"fs\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'path'` with `\"path\"`","line":2,"column":23,"nodeType":null,"messageId":"replace","endLine":2,"endColumn":29,"fix":{"range":[48,54],"text":"\"path\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'express'` with `\"express\"`","line":8,"column":51,"nodeType":null,"messageId":"replace","endLine":8,"endColumn":60,"fix":{"range":[243,252],"text":"\"express\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `process.cwd(),·'docs',·'contracts',·'openapi.yaml'` with `⏎····process.cwd(),⏎····\"docs\",⏎····\"contracts\",⏎····\"openapi.yaml\",⏎··`","line":9,"column":30,"nodeType":null,"messageId":"replace","endLine":9,"endColumn":80,"fix":{"range":[294,344],"text":"\n    process.cwd(),\n    \"docs\",\n    \"contracts\",\n    \"openapi.yaml\",\n  "}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'/docs/openapi.yaml'` with `\"/docs/openapi.yaml\"`","line":11,"column":14,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":34,"fix":{"range":[361,381],"text":"\"/docs/openapi.yaml\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'application/yaml'` with `\"application/yaml\"`","line":12,"column":14,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":32,"fix":{"range":[413,431],"text":"\"application/yaml\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'utf8'` with `\"utf8\"`","line":13,"column":40,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":46,"fix":{"range":[473,479],"text":"\"utf8\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'/docs'` with `\"/docs\"`","line":16,"column":14,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":21,"fix":{"range":[503,510],"text":"\"/docs\""}},{"ruleId":"prettier/prettier","severity":1,"message":"Replace `'html'` with `\"html\"`","line":17,"column":14,"nodeType":null,"messageId":"replace","endLine":17,"endColumn":20,"fix":{"range":[542,548],"text":"\"html\""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":9,"source":"import * as fs from 'fs';\nimport * as path from 'path';\n\n/**\n * Registers Redoc UI at /docs and serves the OpenAPI spec at /docs/openapi.yaml\n * using the provided Express server instance.\n */\nexport function registerDocsRoutes(server: import('express').Express) {\n  const specPath = path.join(process.cwd(), 'docs', 'contracts', 'openapi.yaml');\n\n  server.get('/docs/openapi.yaml', (_req, res) => {\n    res.type('application/yaml');\n    res.send(fs.readFileSync(specPath, 'utf8'));\n  });\n\n  server.get('/docs', (_req, res) => {\n    res.type('html');\n    res.send(`<!DOCTYPE html>\n<html>\n  <head>\n    <title>Chat Backend API Docs</title>\n    <meta charset=\"utf-8\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <script src=\"https://cdn.redoc.ly/redoc/latest/bundles/redoc.standalone.js\"></script>\n  </head>\n  <body>\n    <redoc spec-url=\"/docs/openapi.yaml\"></redoc>\n  </body>\n</html>`);\n  });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/idcard/idcard.controller.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/idcard/idcard.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/infra/config/database.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/infra/prisma/mock-prisma-client.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/infra/prisma/prisma.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/infra/prisma/prisma.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/infra/services/database-health.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/main.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Replace `\"📄·OpenAPI·Spec:·http://localhost:\"·+·port·+·\"/docs/openapi.yaml\"` with `⏎······\"📄·OpenAPI·Spec:·http://localhost:\"·+·port·+·\"/docs/openapi.yaml\",⏎····`","line":121,"column":17,"nodeType":null,"messageId":"replace","endLine":121,"endColumn":83,"fix":{"range":[4009,4075],"text":"\n      \"📄 OpenAPI Spec: http://localhost:\" + port + \"/docs/openapi.yaml\",\n    "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"/**\n * Chat Backend Service - Bootstrap\n *\n * TRUST MODEL: This service is identity-agnostic and does NOT implement authentication.\n *\n * - userId is treated as untrusted, optional metadata for message attribution only\n * - NO identity verification or authorization is performed\n * - Upstream services MUST handle authentication before calling this backend\n * - Security relies on: IP-based rate limiting, input validation, network segmentation\n *\n * Production Deployment: Do NOT expose this service directly to public clients.\n * Always route through an authenticated upstream gateway or API service.\n *\n * Policy: docs/scope/no-auth-policy.md\n * Integration Guide: docs/scope/upstream-integration.md\n */\n\nimport { NestFactory } from \"@nestjs/core\";\nimport { AppModule } from \"./app.module\";\nimport { ValidationPipe } from \"@nestjs/common\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport { ExpressAdapter } from \"@nestjs/platform-express\";\nimport express from \"express\";\nimport { registerDocsRoutes } from \"./docs/registerDocs\";\nimport {\n  requestIdMiddleware,\n  requestLoggingMiddleware,\n  metricsMiddleware,\n  metricsEndpoint,\n} from \"./middleware/logging\";\n\nasync function bootstrap() {\n  const server = express();\n  const app = await NestFactory.create(AppModule, new ExpressAdapter(server));\n\n  // Request ID generation (must be first)\n  app.use(requestIdMiddleware);\n\n  // Request logging with safe redaction\n  app.use(requestLoggingMiddleware);\n\n  // Metrics collection\n  app.use(metricsMiddleware);\n\n  // Global validation pipe\n  app.useGlobalPipes(\n    new ValidationPipe({\n      whitelist: true,\n      forbidNonWhitelisted: true,\n      transform: true,\n    }),\n  );\n\n  // Production-grade CORS restrictions\n  app.enableCors({\n    origin: process.env.CORS_ORIGIN?.split(\",\") || [\"http://localhost:3000\"],\n    credentials: true,\n    methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\", \"OPTIONS\"],\n    allowedHeaders: [\"Content-Type\", \"Authorization\", \"X-Request-ID\"],\n    exposedHeaders: [\n      \"X-Request-ID\",\n      \"RateLimit-Limit\",\n      \"RateLimit-Remaining\",\n      \"RateLimit-Reset\",\n    ],\n    maxAge: 3600,\n  });\n\n  // Security headers (production-grade)\n  app.use((req, res, next) => {\n    res.setHeader(\n      \"Strict-Transport-Security\",\n      \"max-age=31536000; includeSubDomains; preload\",\n    );\n    res.setHeader(\"X-Content-Type-Options\", \"nosniff\");\n    res.setHeader(\"X-Frame-Options\", \"DENY\");\n    res.setHeader(\"X-XSS-Protection\", \"1; mode=block\");\n    res.setHeader(\"Referrer-Policy\", \"strict-origin-when-cross-origin\");\n    res.setHeader(\n      \"Permissions-Policy\",\n      \"geolocation=(), microphone=(), camera=()\",\n    );\n    next();\n  });\n\n  // Serve OpenAPI and Redoc at /docs\n  registerDocsRoutes(server);\n\n  // Global prefix for API routes\n  app.setGlobalPrefix(\"api/v1\");\n\n  const port = process.env.PORT || 3001;\n\n  // HTTPS configuration for production\n  if (\n    process.env.NODE_ENV === \"production\" &&\n    process.env.SSL_KEY_PATH &&\n    process.env.SSL_CERT_PATH\n  ) {\n    const httpsOptions = {\n      key: fs.readFileSync(process.env.SSL_KEY_PATH),\n      cert: fs.readFileSync(process.env.SSL_CERT_PATH),\n    };\n\n    // Note: For HTTPS, you would need to use NestFactory.create(AppModule, { httpsOptions })\n    console.log(`Application is running on https://localhost:${port}`);\n  } else {\n    console.log(`Application is running on http://localhost:${port}`);\n    console.log(\"\");\n    console.log(\"🔍 Monitoring Endpoints:\");\n    console.log(`  - Health: http://localhost:${port}/health`);\n    console.log(`  - Metrics: http://localhost:${port}/metrics`);\n    console.log(\"\");\n    console.log(\"📚 Available API Endpoints:\");\n    console.log(`  - Chat: http://localhost:${port}/api/v1/chat`);\n    console.log(`  - Users: http://localhost:${port}/api/v1/users`);\n    console.log(\"\");\n    console.log(\"🛡️  Security: Rate limiting, validation, logging enabled\");\n    console.log(\"📖 API Docs UI: http://localhost:\" + port + \"/docs\");\n    console.log(\"📄 OpenAPI Spec: http://localhost:\" + port + \"/docs/openapi.yaml\");\n  }\n\n  await app.listen(port);\n}\n\nbootstrap().catch((error) => {\n  console.error(\"Failed to start application:\", error);\n  process.exit(1);\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/middleware/logging.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/middleware/rateLimiter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/middleware/validation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/routes/idcard.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/upload/upload.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/user/application/user.controller.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/user/application/user.service.ts","messages":[{"ruleId":"prettier/prettier","severity":1,"message":"Delete `⏎`","line":118,"column":1,"nodeType":null,"messageId":"delete","endLine":119,"endColumn":1,"fix":{"range":[3559,3560],"text":""}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n} from \"@nestjs/common\";\nimport {\n  UserRepository,\n  UpdateUserDto,\n  UserResponseDto,\n} from \"../data/user.repository\";\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly userRepository: UserRepository) {}\n\n  async getUserById(id: string): Promise<UserResponseDto | null> {\n    const user = await this.userRepository.findById(id);\n    if (!user) {\n      throw new NotFoundException(\"User not found\");\n    }\n\n    return this.mapToResponseDto(user);\n  }\n\n  async getUserByEmail(email: string): Promise<UserResponseDto | null> {\n    const user = await this.userRepository.findByEmail(email);\n    return user ? this.mapToResponseDto(user) : null;\n  }\n\n  async getUserByUsername(username: string): Promise<UserResponseDto | null> {\n    const user = await this.userRepository.findByUsername(username);\n    return user ? this.mapToResponseDto(user) : null;\n  }\n\n  async updateUser(\n    id: string,\n    updateUserDto: UpdateUserDto,\n  ): Promise<UserResponseDto> {\n    const existingUser = await this.userRepository.findById(id);\n    if (!existingUser) {\n      throw new NotFoundException(\"User not found\");\n    }\n\n    const updatedUser = await this.userRepository.update(id, updateUserDto);\n    return this.mapToResponseDto(updatedUser);\n  }\n\n  async checkAnonymousPostLimit(userId: string): Promise<boolean> {\n    const user = await this.userRepository.findById(userId);\n    if (!user) {\n      throw new NotFoundException(\"User not found\");\n    }\n\n    // Check if it's a new day and reset count if needed\n    const today = new Date();\n    const lastPostDate = user.lastAnonymousPostDate;\n\n    if (!lastPostDate || this.isDifferentDay(today, lastPostDate)) {\n      await this.userRepository.resetAnonymousPostCount(userId);\n      return true; // Can post\n    }\n\n    return user.anonymousPostsToday < 2;\n  }\n\n  async incrementAnonymousPostCount(userId: string): Promise<void> {\n    await this.userRepository.incrementAnonymousPostCount(userId);\n  }\n\n  async checkWeeklyPushLimit(userId: string): Promise<boolean> {\n    const user = await this.userRepository.findById(userId);\n    if (!user) {\n      throw new NotFoundException(\"User not found\");\n    }\n\n    // Check if it's a new week and reset count if needed\n    const today = new Date();\n    const lastResetDate = user.lastWeeklyReset;\n\n    if (this.isNewWeek(today, lastResetDate)) {\n      await this.userRepository.resetWeeklyPushCount(userId);\n      return true; // Can push\n    }\n\n    return user.weeklyPushesUsed < 5; // Assuming 5 pushes per week limit\n  }\n\n  async incrementWeeklyPushCount(userId: string): Promise<void> {\n    await this.userRepository.incrementWeeklyPushCount(userId);\n  }\n\n  private mapToResponseDto(user: any): UserResponseDto {\n    return {\n      id: user.id,\n      email: user.email,\n      username: user.username,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      bio: user.bio,\n      profileImageUrl: user.profileImageUrl,\n      profileVisibility: user.profileVisibility,\n      createdAt: user.createdAt,\n      stats: {\n        anonymousPostsToday: user.anonymousPostsToday || 0,\n        weeklyPushesUsed: user.weeklyPushesUsed || 0,\n      },\n    };\n  }\n\n  private isDifferentDay(date1: Date, date2: Date): boolean {\n    return date1.toDateString() !== date2.toDateString();\n  }\n\n  private isNewWeek(currentDate: Date, lastResetDate: Date): boolean {\n    const weekInMs = 7 * 24 * 60 * 60 * 1000;\n    return currentDate.getTime() - lastResetDate.getTime() > weekInMs;\n  }\n\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/user/data/user.repository.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/user/dtos/create-user.dto.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/harishraghave/Desktop/colleging/college-id-signup-1/src/user/user.module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]