{
  "generatedAt": "2025-10-20T21:00:00Z",
  "repository": "college-id-signup-1",
  "summary": {
    "totalBacklogItems": 80,
    "blocker": 25,
    "major": 20,
    "minor": 20,
    "performance": 4,
    "security": 6,
    "documentation": 4,
    "testing": 4,
    "debt": 5
  },
  "impactAnalysis": {
    "BLOCKER-001": {
      "id": "BLOCKER-001",
      "title": "Remove src/idcard/ module",
      "blastRadius": {
        "filesDeleted": 17,
        "locRemoved": 4200,
        "modulesAffected": ["app.module.ts", "upload.module.ts"],
        "routesRemoved": 6,
        "endpointsDeleted": [
          "/api/idcard/upload",
          "/api/idcard/verify",
          "/api/idcard/status",
          "/api/idcard/admin/pending",
          "/api/idcard/admin/verify",
          "/api/idcard/history"
        ]
      },
      "breakingChanges": {
        "externalAPIs": [
          {
            "endpoint": "POST /api/idcard/upload",
            "impact": "External clients using ID card upload will receive 404",
            "mitigation": "Return 410 Gone with deprecation notice",
            "deprecationPeriod": "N/A - out of scope per ADR-001"
          }
        ],
        "internalAPIs": [],
        "databaseSchema": []
      },
      "dependencies": {
        "blockedBy": [],
        "blocks": [
          "BLOCKER-006",
          "BLOCKER-017",
          "BLOCKER-023",
          "MAJOR-015",
          "MAJOR-016"
        ]
      },
      "riskScore": 7,
      "riskFactors": [
        "Large module removal (17 files)",
        "Affects app.module.ts root configuration",
        "Removes 6 API endpoints"
      ],
      "mitigation": "Remove from app.module.ts imports first, then delete directory",
      "rollbackProcedure": "Revert commit, restore from git history",
      "estimatedDowntime": "0 seconds (rolling deployment)"
    },
    "BLOCKER-007": {
      "id": "BLOCKER-007",
      "title": "Drop User.verifiedCollegeId from schema",
      "blastRadius": {
        "filesModified": 8,
        "locChanged": 150,
        "modulesAffected": ["user", "idcard", "prisma"],
        "schemaChanges": ["ALTER TABLE User DROP COLUMN verifiedCollegeId"]
      },
      "breakingChanges": {
        "externalAPIs": [
          {
            "endpoint": "GET /api/user/me",
            "impact": "Response no longer includes verifiedCollegeId field",
            "mitigation": "Document in migration guide, add deprecation notice",
            "deprecationPeriod": "30 days"
          }
        ],
        "internalAPIs": [],
        "databaseSchema": [
          {
            "model": "User",
            "field": "verifiedCollegeId",
            "migration": "DROP COLUMN",
            "dataLoss": "verifiedCollegeId values permanently deleted",
            "backupRequired": true
          }
        ]
      },
      "dependencies": {
        "blockedBy": ["BLOCKER-001"],
        "blocks": ["MAJOR-001", "MAJOR-020"]
      },
      "riskScore": 9,
      "riskFactors": [
        "Database schema change - irreversible",
        "Potential data loss",
        "Breaking change for external clients"
      ],
      "mitigation": "Backup database before migration, test on sanitized production snapshot",
      "rollbackProcedure": "Restore database from backup (downtime: ~5 minutes)",
      "estimatedDowntime": "30 seconds (ALTER TABLE)"
    },
    "BLOCKER-014": {
      "id": "BLOCKER-014",
      "title": "Delete frontend/ directory",
      "blastRadius": {
        "filesDeleted": 6,
        "locRemoved": 1500,
        "modulesAffected": [],
        "dependenciesRemoved": [
          "react",
          "react-dom",
          "vite",
          "@vitejs/plugin-react"
        ]
      },
      "breakingChanges": {
        "externalAPIs": [],
        "internalAPIs": [],
        "databaseSchema": []
      },
      "dependencies": {
        "blockedBy": [],
        "blocks": ["MAJOR-014"]
      },
      "riskScore": 2,
      "riskFactors": ["Isolated from backend logic"],
      "mitigation": "Archive frontend to separate repository if needed",
      "rollbackProcedure": "Restore from git history",
      "estimatedDowntime": "0 seconds"
    },
    "MAJOR-004": {
      "id": "MAJOR-004",
      "title": "Enable 44 skipped integration tests",
      "blastRadius": {
        "filesModified": 3,
        "locChanged": 200,
        "modulesAffected": ["test"],
        "testsEnabled": 44
      },
      "breakingChanges": {
        "externalAPIs": [],
        "internalAPIs": [],
        "databaseSchema": []
      },
      "dependencies": {
        "blockedBy": ["database-setup"],
        "blocks": ["MAJOR-010", "MAJOR-011", "TEST-001", "TEST-002", "TEST-004"]
      },
      "riskScore": 5,
      "riskFactors": [
        "Tests may reveal hidden bugs",
        "Requires database connection",
        "May slow down CI/CD pipeline"
      ],
      "mitigation": "Enable tests incrementally, fix failures before proceeding",
      "rollbackProcedure": "Skip tests again if blocking deployment",
      "estimatedDowntime": "0 seconds"
    }
  },
  "changeImpactMatrix": {
    "modules": {
      "idcard": {
        "changeType": "DELETE",
        "consumers": ["app.module.ts"],
        "externalClients": ["unknown - assume frontend"],
        "breakingChangeRisk": "HIGH"
      },
      "feed": {
        "changeType": "DELETE",
        "consumers": ["app.module.ts"],
        "externalClients": ["unknown"],
        "breakingChangeRisk": "HIGH"
      },
      "posts": {
        "changeType": "DELETE",
        "consumers": ["app.module.ts", "feed.module.ts"],
        "externalClients": ["unknown"],
        "breakingChangeRisk": "HIGH"
      },
      "connections": {
        "changeType": "DELETE",
        "consumers": ["app.module.ts"],
        "externalClients": ["unknown"],
        "breakingChangeRisk": "HIGH"
      },
      "interactions": {
        "changeType": "DELETE",
        "consumers": ["app.module.ts"],
        "externalClients": ["unknown"],
        "breakingChangeRisk": "HIGH"
      },
      "upload": {
        "changeType": "DELETE",
        "consumers": ["app.module.ts", "idcard.module.ts"],
        "externalClients": ["idcard feature"],
        "breakingChangeRisk": "MEDIUM"
      },
      "user": {
        "changeType": "REFACTOR",
        "consumers": ["chat.module.ts", "app.module.ts"],
        "externalClients": ["chat feature"],
        "breakingChangeRisk": "LOW - partial removal"
      },
      "frontend": {
        "changeType": "DELETE",
        "consumers": [],
        "externalClients": ["end users"],
        "breakingChangeRisk": "HIGH"
      }
    },
    "schema": {
      "User.verifiedCollegeId": {
        "changeType": "DROP COLUMN",
        "dataLossRisk": "HIGH",
        "backupRequired": true,
        "rollbackComplexity": "MEDIUM"
      },
      "User.collegeName": {
        "changeType": "DROP COLUMN",
        "dataLossRisk": "HIGH",
        "backupRequired": true,
        "rollbackComplexity": "MEDIUM"
      },
      "User.studentIdNumber": {
        "changeType": "DROP COLUMN",
        "dataLossRisk": "HIGH",
        "backupRequired": true,
        "rollbackComplexity": "MEDIUM"
      },
      "Post": {
        "changeType": "DROP TABLE",
        "dataLossRisk": "HIGH",
        "backupRequired": true,
        "rollbackComplexity": "HIGH"
      },
      "Connection": {
        "changeType": "DROP TABLE",
        "dataLossRisk": "HIGH",
        "backupRequired": true,
        "rollbackComplexity": "HIGH"
      },
      "Interaction": {
        "changeType": "DROP TABLE",
        "dataLossRisk": "HIGH",
        "backupRequired": true,
        "rollbackComplexity": "HIGH"
      },
      "Feed": {
        "changeType": "DROP TABLE",
        "dataLossRisk": "HIGH",
        "backupRequired": true,
        "rollbackComplexity": "HIGH"
      }
    },
    "environment": {
      "AWS_REGION": {
        "changeType": "REMOVE",
        "usedBy": ["upload.service.ts"],
        "risk": "LOW - module deleted"
      },
      "AWS_ACCESS_KEY_ID": {
        "changeType": "REMOVE",
        "usedBy": ["upload.service.ts"],
        "risk": "LOW - module deleted"
      },
      "AWS_SECRET_ACCESS_KEY": {
        "changeType": "REMOVE",
        "usedBy": ["upload.service.ts"],
        "risk": "LOW - module deleted"
      },
      "S3_BUCKET_NAME": {
        "changeType": "REMOVE",
        "usedBy": ["upload.service.ts"],
        "risk": "LOW - module deleted"
      },
      "FRONTEND_URL": {
        "changeType": "REMOVE",
        "usedBy": ["CORS config"],
        "risk": "LOW - frontend deleted"
      },
      "CLIENT_URL": {
        "changeType": "REMOVE",
        "usedBy": ["unknown"],
        "risk": "LOW - duplicate variable"
      }
    }
  },
  "dataMigrationStrategy": {
    "backupProcedure": {
      "command": "pg_dump -U postgres -d college_chat_db > backup_$(date +%Y%m%d_%H%M%S).sql",
      "frequency": "Before each schema change",
      "retention": "30 days",
      "verification": "Verify backup file size > 0 and gzip compressible"
    },
    "migrationOrder": [
      "1. Backup database",
      "2. Test migration on sanitized production snapshot",
      "3. Apply migration to production during low-traffic window",
      "4. Verify Message/Conversation data intact",
      "5. Monitor error rates for 1 hour",
      "6. Archive deleted data to cold storage"
    ],
    "rollbackStrategy": {
      "database": "pg_restore -U postgres -d college_chat_db < backup.sql (downtime: ~5 min)",
      "code": "git revert <commit> && git push && deploy (downtime: ~2 min)",
      "environment": "Restore .env from backup, redeploy (downtime: ~1 min)"
    },
    "estimatedDowntime": {
      "perMigration": "30 seconds (ALTER TABLE)",
      "totalForAllSchema": "3 minutes (7 schema changes)",
      "rollbackIfNeeded": "5 minutes (database restore)"
    }
  },
  "contractVersioningStrategy": {
    "apiVersioning": {
      "current": "v1",
      "deprecation": {
        "endpoints": [
          "/api/idcard/**",
          "/api/feed/**",
          "/api/posts/**",
          "/api/connections/**",
          "/api/interactions/**"
        ],
        "timeline": "N/A - immediate removal per ADR-001 scope boundary",
        "noticeMethod": "410 Gone response with deprecation notice",
        "sunsetHeader": "Sunset: Sun, 01 Nov 2025 00:00:00 GMT"
      },
      "breaking": true,
      "mitigationForExternalClients": "Provide migration guide to alternative solutions (external college verification services)"
    },
    "databaseVersioning": {
      "tool": "Prisma Migrate",
      "strategy": "Forward-only migrations",
      "rollbackSupport": "Database backup restore only",
      "testingRequired": "All migrations tested on sanitized production snapshot"
    }
  },
  "testingStrategy": {
    "preMigration": [
      "Backup database",
      "Test migration on dev environment",
      "Test migration on staging with production snapshot",
      "Verify rollback procedure"
    ],
    "postMigration": [
      "Verify Message/Conversation models intact",
      "Run smoke test battery (REST + Socket.IO)",
      "Verify p95 latency within SLO (≤250ms)",
      "Monitor error rate for 1 hour (must be ≤ baseline + 0.1%)"
    ],
    "acceptance": [
      "All backlog item acceptance tests pass",
      "Zero TypeScript errors",
      "Zero ESLint errors",
      "Coverage ≥75%",
      "All integration tests passing"
    ]
  },
  "riskSummary": {
    "highRisk": 7,
    "mediumRisk": 13,
    "lowRisk": 60,
    "totalBacklogItems": 80,
    "mitigatedRisks": 7,
    "acceptableRisks": 73
  }
}
